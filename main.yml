---
- name: Gather inventory facts and publish report to Confluence
  hosts: "{{ group_name | default('all') }}"
  gather_facts: true
  become: false

  vars:
    confluence_base_url: "https://nareshyadavmusic.atlassian.net/wiki"
    confluence_space: "aap"
    confluence_user: "nareshyadav.music@gmail.com"
    confluence_token: "{{ lookup('env', 'CONFLUENCE_API_TOKEN') }}"
    # page title = AAP Inventory - <group name>
    page_title: "AAP Inventory - {{ group_names[0] | default('all') }}"
    html_template: "inventory_table.j2"

  tasks:
    - name: Collect facts for all hosts
      setup:
      delegate_to: "{{ inventory_hostname }}"
      run_once: false

    - name: Build consolidated facts
      run_once: true
      set_fact:
        host_facts: >-
          {{
            dict(
              groups[group_names[0]] |
              zip(groups[group_names[0]] | map('extract', hostvars))
            )
          }}

    - name: Generate HTML report from template
      run_once: true
      set_fact:
        table_html: "{{ lookup('template', html_template) }}"
      vars:
        group_name: "{{ group_names[0] }}"
        all_hosts: "{{ host_facts }}"

    - name: Check if Confluence page already exists
      uri:
        url: "{{ confluence_base_url }}/rest/api/content?title={{ page_title | urlencode }}&spaceKey={{ confluence_space }}"
        method: GET
        user: "{{ confluence_user }}"
        password: "{{ confluence_token }}"
        force_basic_auth: yes
        return_content: yes
        status_code: 200
      delegate_to: localhost
      run_once: true
      register: confluence_page_check

    - name: Set existing page ID if found
      run_once: true
      set_fact:
        existing_page_id: "{{ confluence_page_check.json.results[0].id | default('') }}"
      when: confluence_page_check.json.results | length > 0

    - name: Fetch current page version if exists
      uri:
        url: "{{ confluence_base_url }}/rest/api/content/{{ existing_page_id }}?expand=version"
        method: GET
        user: "{{ confluence_user }}"
        password: "{{ confluence_token }}"
        force_basic_auth: yes
        return_content: yes
        status_code: 200
      delegate_to: localhost
      run_once: true
      register: confluence_version_info
      when: existing_page_id | length > 0

    - name: Set current version fact
      run_once: true
      set_fact:
        current_version: "{{ confluence_version_info.json.version.number | default(0) }}"
      when: existing_page_id | length > 0

    - name: Update or Create Confluence Page
      uri:
        url: >-
          {{ confluence_base_url }}/rest/api/content{{ '/' + existing_page_id if existing_page_id | length > 0 else '' }}
        method: "{{ 'PUT' if existing_page_id | length > 0 else 'POST' }}"
        user: "{{ confluence_user }}"
        password: "{{ confluence_token }}"
        force_basic_auth: yes
        headers:
          Content-Type: "application/json"
        body_format: json
        body: >-
          {{
            {
              "id": existing_page_id,
              "type": "page",
              "title": page_title,
              "space": {"key": confluence_space},
              "body": {
                "storage": {
                  "value": table_html,
                  "representation": "storage"
                }
              },
              "version": {"number": (current_version | int) + 1}
            }
            if existing_page_id | length > 0 else
            {
              "type": "page",
              "title": page_title,
              "space": {"key": confluence_space},
              "body": {
                "storage": {
                  "value": table_html,
                  "representation": "storage"
                }
              }
            }
          }}
        status_code: [200, 201]
        validate_certs: true
      delegate_to: localhost
      run_once: true
      register: confluence_result

    - name: Print Confluence update status
      run_once: true
      debug:
        msg: >-
          âœ… Successfully {{ 'updated' if existing_page_id | length > 0 else 'created' }}
          Confluence page: {{ page_title }} ({{ confluence_result.status }})
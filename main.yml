---
- name: Gather facts from all hosts
  hosts: all
  gather_facts: yes
  tasks:
    - name: Debug host facts
      ansible.builtin.debug:
        msg: "Gathered facts for {{ inventory_hostname }}"

- name: Publish Inventory to Confluence Cloud
  hosts: localhost
  gather_facts: false
  vars:
    confluence_base_url: "https://nareshyadavmusic.atlassian.net/wiki"
    confluence_space: "aap"
    # ðŸ‘‡ Use the inventory/group name dynamically for the page title
    page_title: "AAP Inventory - {{ target_group | default('all') }}"
    target_group: all
  tasks:
    - name: Load Confluence credentials from environment
      set_fact:
        confluence_user: "{{ lookup('env', 'CONFLUENCE_USER') }}"
        confluence_token: "{{ lookup('env', 'CONFLUENCE_TOKEN') }}"

    - name: Verify credentials are loaded
      ansible.builtin.fail:
        msg: "Confluence credentials not set correctly in AAP"
      when: confluence_user == "" or confluence_token == ""

    - name: Check if Confluence page already exists
      ansible.builtin.uri:
        url: "{{ confluence_base_url }}/rest/api/content?title={{ page_title | urlencode }}&spaceKey={{ confluence_space }}"
        user: "{{ confluence_user }}"
        password: "{{ confluence_token }}"
        force_basic_auth: yes
        status_code: 200
        return_content: yes
      register: confluence_page_check

    - name: Initialize version and page ID defaults
      set_fact:
        existing_page_id: ""
        existing_version: 0

    - name: Set page ID and version if found
      set_fact:
        existing_page_id: "{{ confluence_page_check.json.results[0].id | default('') }}"
        existing_version: "{{ confluence_page_check.json.results[0].version.number | default(0) }}"
      when: confluence_page_check.json.results | length > 0

    - name: Ensure safe group name and non-empty list
      set_fact:
        safe_group_name: "{{ target_group if (target_group in groups) else 'all' }}"
        host_list: "{{ groups[target_group] | default(groups['all']) | default([]) }}"
      run_once: true

    - name: Build HTML table with inventory facts
      set_fact:
        table_html: "{{ lookup('template', 'inventory_table.j2') }}"
      vars:
        group_name: "{{ safe_group_name }}"
        group_hosts: "{{ host_list }}"
      run_once: true

    - name: Prepare Confluence page body
      set_fact:
        confluence_body: >-
          {{
            {
              "type": "page",
              "title": page_title,
              "space": {"key": confluence_space},
              "body": {
                "storage": {
                  "value": table_html,
                  "representation": "storage"
                }
              }
            }
            | combine({
                "id": existing_page_id,
                "version": {"number": (existing_version | default(0) | int) + 1}
              }) if existing_page_id | length > 0 else
              {
                "type": "page",
                "title": page_title,
                "space": {"key": confluence_space},
                "body": {
                  "storage": {
                    "value": table_html,
                    "representation": "storage"
                  }
                }
              }
          }}

    - name: Create or update Confluence page (final)
      ansible.builtin.uri:
        url: >-
          {{ confluence_base_url }}/rest/api/content{{ '/' + existing_page_id if existing_page_id | length > 0 else '' }}
        method: "{{ 'PUT' if existing_page_id | length > 0 else 'POST' }}"
        user: "{{ confluence_user }}"
        password: "{{ confluence_token }}"
        force_basic_auth: yes
        headers:
          Content-Type: "application/json"
        body_format: json
        body: "{{ confluence_body }}"
        status_code: [200, 201]
      register: confluence_update